package com.shastino.controlProductos.controller;

import com.shastino.controlProductos.entity.Categoria;
import com.shastino.controlProductos.service.CategoriaService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/categorias")
public class CategoriaController {

    private final CategoriaService categoriaService;

    public CategoriaController(CategoriaService categoriaService) {
        this.categoriaService = categoriaService;
    }

    // ðŸ”¹ GET: listar todas las categorÃ­as
    @GetMapping
    public List<Categoria> listarCategorias() {
        return categoriaService.listarCategorias();
    }

    // ðŸ”¹ GET: obtener una categorÃ­a por nombre
    @GetMapping("/{nombre}")
    public ResponseEntity<Categoria> obtenerCategoriaPorNombre(@PathVariable String nombre) {
        return categoriaService.obtenerCategoriaPorNombre(nombre)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }

    // ðŸ”¹ POST: crear nueva categorÃ­a
    @PostMapping
    public ResponseEntity<Categoria> crearCategoria(@RequestBody Categoria categoria) {
        return ResponseEntity.ok(categoriaService.guardarCategoria(categoria));
    }

    // ðŸ”¹ PUT: actualizar una categorÃ­a existente
    @PutMapping("/{nombre}")
    public ResponseEntity<Categoria> actualizarCategoria(@PathVariable String nombre, @RequestBody Categoria categoria) {
        return ResponseEntity.ok(categoriaService.actualizarCategoria(nombre, categoria));
    }

    // ðŸ”¹ DELETE: eliminar categorÃ­a por nombre
    @DeleteMapping("/{nombre}")
    public ResponseEntity<Void> eliminarCategoria(@PathVariable String nombre) {
        categoriaService.eliminarCategoriaPorNombre(nombre);
        return ResponseEntity.noContent().build();
    }
}
